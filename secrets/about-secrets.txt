# /secrets/about-secrets.txt

This directory remains in the repo but none of its contents other than the about file
will ever be added to the repo because of a few corresponding .gitignore entries.
During builds, /auto/script copy commands copy the SSL/TLS certificate and key file from
this directory into the /nginx/certs/ directory prior to building the docker container.
In some projects the destination dir for the certs will be different.

This about-secrets.txt file serves to keep the /secrets/ directory in the repo. Git does not hold empty dirs.
The .gitignore file will ignore everything inside the /secrets/ directory except for this about file.

The main reason for this arrangement is to keep the SSL/TLS files together with a variety of other secrets and
keep those at the top-level of the project in the /secrets/ directory where it is easier to put them in place through
a secure process which is separate from the git repo.
It is important to remain well aware of these files and make sure they are excluded from the repo at
all times.

If you ever accidentally add a secret to a repo, you have a problem.
It is relatively difficult and risky to the health of your repo to remove anything from the history.
Git repos retain all of their history even if a file has been deleted from subsequent revisions.
It takes special methods to make edits to the history of a git repository and it is very wise to
avoid that scenario. You best way of addressing such a scenario might be to discard the secret
or certificate which was mistakenly added to a repo and then re-creating and installing that secret.
Then you can safely leave the old secret in the repo. This is not always an easy option either.
It is best to be extra diligent and avoid such mistakes.

The .gitignore entries which go with this methodology are:

# SSL:/TLS Certificates and Other Secrets
secrets/*
!secrets/about-secrets.txt

